// Generated by IcedCoffeeScript 108.0.13

/* !pragma coverage-skip-block */

(function() {
  window.event_mixin_constructor = function(_t) {
    _t.$event_hash = {};
    return _t.on("delete", function() {
      var k, v, _ref;
      _ref = _t.$event_hash;
      for (k in _ref) {
        v = _ref[k];
        if (k === "delete") {
          continue;
        }
        _t.$event_hash[k].clear();
      }
    });
  };

  window.event_mixin = function(_t) {
    var _base;
    _t.prototype.$delete_state = false;
    _t.prototype.$event_hash = {};
    if ((_base = _t.prototype)["delete"] == null) {
      _base["delete"] = function() {
        this.dispatch("delete");
      };
    }
    _t.prototype.once = function(event_name, cb) {
      var need_remove;
      need_remove = (function(_this) {
        return function() {
          _this.off(event_name, need_remove);
          cb();
        };
      })(this);
      this.on(event_name, need_remove);
    };
    _t.prototype.ensure_on = function(event_name, cb) {
      var v, _base1, _i, _len;
      if (event_name instanceof Array) {
        for (_i = 0, _len = event_name.length; _i < _len; _i++) {
          v = event_name[_i];
          this.ensure_on(v, cb);
        }
        return this;
      }
      if ((_base1 = this.$event_hash)[event_name] == null) {
        _base1[event_name] = [];
      }
      if (!this.$event_hash[event_name].has(cb)) {
        this.$event_hash[event_name].push(cb);
      }
      return this;
    };
    _t.prototype.on = function(event_name, cb) {
      var v, _base1, _i, _len;
      if (event_name instanceof Array) {
        for (_i = 0, _len = event_name.length; _i < _len; _i++) {
          v = event_name[_i];
          this.on(v, cb);
        }
        return this;
      }
      if ((_base1 = this.$event_hash)[event_name] == null) {
        _base1[event_name] = [];
      }
      this.$event_hash[event_name].push(cb);
      return this;
    };
    _t.prototype.off = function(event_name, cb) {
      var e, idx, list, v, _i, _len;
      this.$delete_state = true;
      if (event_name instanceof Array) {
        for (_i = 0, _len = event_name.length; _i < _len; _i++) {
          v = event_name[_i];
          this.off(v, cb);
        }
        return;
      }
      list = this.$event_hash[event_name];
      if (!list) {
        puts("probably lose some important because no event_name '" + event_name + "' found");
        e = new Error;
        puts(e.stack);
        return;
      }
      idx = list.idx(cb);
      if (idx >= 0) {
        list[idx] = null;
      }
    };
    return _t.prototype.dispatch = function(event_name, hash) {
      var cb, e, idx, list, _i, _len, _ref;
      if (hash == null) {
        hash = {};
      }
      if (this.$event_hash[event_name]) {
        _ref = list = this.$event_hash[event_name];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          cb = _ref[_i];
          if (cb === null) {
            continue;
          }
          try {
            cb.call(this, hash);
          } catch (_error) {
            e = _error;
            perr(e);
          }
        }
        if (this.$delete_state) {
          while (0 < (idx = list.idx(null))) {
            list.remove_idx(idx);
          }
          this.$delete_state = false;
        }
      }
    };
  };

  window.Event_mixin = (function() {
    event_mixin(Event_mixin);

    function Event_mixin() {
      event_mixin_constructor(this);
    }

    return Event_mixin;

  })();

  window.event_manager = new window.Event_mixin();

}).call(this);
